// Generated by view binder compiler. Do not edit!
package com.appxy.custom_dialog.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.appxy.custom_dialog.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogLoadingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView cycleIv;

  @NonNull
  public final ImageView iconIv;

  @NonNull
  public final RelativeLayout iconLayout;

  @NonNull
  public final TextView msgTv;

  @NonNull
  public final LinearLayout rootLayout;

  @NonNull
  public final TextView titleTv;

  private DialogLoadingBinding(@NonNull LinearLayout rootView, @NonNull ImageView cycleIv,
      @NonNull ImageView iconIv, @NonNull RelativeLayout iconLayout, @NonNull TextView msgTv,
      @NonNull LinearLayout rootLayout, @NonNull TextView titleTv) {
    this.rootView = rootView;
    this.cycleIv = cycleIv;
    this.iconIv = iconIv;
    this.iconLayout = iconLayout;
    this.msgTv = msgTv;
    this.rootLayout = rootLayout;
    this.titleTv = titleTv;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogLoadingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogLoadingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_loading, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogLoadingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cycle_iv;
      ImageView cycleIv = ViewBindings.findChildViewById(rootView, id);
      if (cycleIv == null) {
        break missingId;
      }

      id = R.id.icon_iv;
      ImageView iconIv = ViewBindings.findChildViewById(rootView, id);
      if (iconIv == null) {
        break missingId;
      }

      id = R.id.icon_layout;
      RelativeLayout iconLayout = ViewBindings.findChildViewById(rootView, id);
      if (iconLayout == null) {
        break missingId;
      }

      id = R.id.msg_tv;
      TextView msgTv = ViewBindings.findChildViewById(rootView, id);
      if (msgTv == null) {
        break missingId;
      }

      LinearLayout rootLayout = (LinearLayout) rootView;

      id = R.id.title_tv;
      TextView titleTv = ViewBindings.findChildViewById(rootView, id);
      if (titleTv == null) {
        break missingId;
      }

      return new DialogLoadingBinding((LinearLayout) rootView, cycleIv, iconIv, iconLayout, msgTv,
          rootLayout, titleTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
