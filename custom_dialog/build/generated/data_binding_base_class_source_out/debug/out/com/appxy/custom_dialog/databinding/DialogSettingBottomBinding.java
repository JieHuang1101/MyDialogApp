// Generated by view binder compiler. Do not edit!
package com.appxy.custom_dialog.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.appxy.custom_dialog.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogSettingBottomBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView blueThemeIv;

  @NonNull
  public final TextView blueThemeTv;

  @NonNull
  public final ImageView closeIv;

  @NonNull
  public final LinearLayout darkBlueLayout;

  @NonNull
  public final RecyclerView recycler;

  @NonNull
  public final LinearLayout rootLayout;

  @NonNull
  public final LinearLayout themeLayout;

  @NonNull
  public final TextView titleTv;

  @NonNull
  public final LinearLayout whiteLayout;

  @NonNull
  public final ImageView whiteThemeIv;

  @NonNull
  public final TextView whiteThemeTv;

  private DialogSettingBottomBinding(@NonNull LinearLayout rootView, @NonNull ImageView blueThemeIv,
      @NonNull TextView blueThemeTv, @NonNull ImageView closeIv,
      @NonNull LinearLayout darkBlueLayout, @NonNull RecyclerView recycler,
      @NonNull LinearLayout rootLayout, @NonNull LinearLayout themeLayout,
      @NonNull TextView titleTv, @NonNull LinearLayout whiteLayout, @NonNull ImageView whiteThemeIv,
      @NonNull TextView whiteThemeTv) {
    this.rootView = rootView;
    this.blueThemeIv = blueThemeIv;
    this.blueThemeTv = blueThemeTv;
    this.closeIv = closeIv;
    this.darkBlueLayout = darkBlueLayout;
    this.recycler = recycler;
    this.rootLayout = rootLayout;
    this.themeLayout = themeLayout;
    this.titleTv = titleTv;
    this.whiteLayout = whiteLayout;
    this.whiteThemeIv = whiteThemeIv;
    this.whiteThemeTv = whiteThemeTv;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSettingBottomBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSettingBottomBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_setting_bottom, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSettingBottomBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blue_theme_iv;
      ImageView blueThemeIv = ViewBindings.findChildViewById(rootView, id);
      if (blueThemeIv == null) {
        break missingId;
      }

      id = R.id.blue_theme_tv;
      TextView blueThemeTv = ViewBindings.findChildViewById(rootView, id);
      if (blueThemeTv == null) {
        break missingId;
      }

      id = R.id.close_iv;
      ImageView closeIv = ViewBindings.findChildViewById(rootView, id);
      if (closeIv == null) {
        break missingId;
      }

      id = R.id.dark_blue_layout;
      LinearLayout darkBlueLayout = ViewBindings.findChildViewById(rootView, id);
      if (darkBlueLayout == null) {
        break missingId;
      }

      id = R.id.recycler;
      RecyclerView recycler = ViewBindings.findChildViewById(rootView, id);
      if (recycler == null) {
        break missingId;
      }

      LinearLayout rootLayout = (LinearLayout) rootView;

      id = R.id.theme_layout;
      LinearLayout themeLayout = ViewBindings.findChildViewById(rootView, id);
      if (themeLayout == null) {
        break missingId;
      }

      id = R.id.title_tv;
      TextView titleTv = ViewBindings.findChildViewById(rootView, id);
      if (titleTv == null) {
        break missingId;
      }

      id = R.id.white_layout;
      LinearLayout whiteLayout = ViewBindings.findChildViewById(rootView, id);
      if (whiteLayout == null) {
        break missingId;
      }

      id = R.id.white_theme_iv;
      ImageView whiteThemeIv = ViewBindings.findChildViewById(rootView, id);
      if (whiteThemeIv == null) {
        break missingId;
      }

      id = R.id.white_theme_tv;
      TextView whiteThemeTv = ViewBindings.findChildViewById(rootView, id);
      if (whiteThemeTv == null) {
        break missingId;
      }

      return new DialogSettingBottomBinding((LinearLayout) rootView, blueThemeIv, blueThemeTv,
          closeIv, darkBlueLayout, recycler, rootLayout, themeLayout, titleTv, whiteLayout,
          whiteThemeIv, whiteThemeTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
