// Generated by view binder compiler. Do not edit!
package com.appxy.custom_dialog.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.appxy.custom_dialog.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogRenewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView brandNewIv;

  @NonNull
  public final TextView brandNewTv;

  @NonNull
  public final RelativeLayout layout1;

  @NonNull
  public final LinearLayout layout2;

  @NonNull
  public final RelativeLayout layout3;

  @NonNull
  public final RelativeLayout layout4;

  @NonNull
  public final TextView negativeTv;

  @NonNull
  public final ImageView oneTapIv;

  @NonNull
  public final TextView oneTapTv;

  @NonNull
  public final TextView positiveTv;

  @NonNull
  public final LinearLayout rootLayout;

  @NonNull
  public final ImageView scan8Iv;

  @NonNull
  public final TextView seamlessSharingTv;

  @NonNull
  public final ImageView speedierScansIv;

  @NonNull
  public final TextView speedierScansTv;

  private DialogRenewBinding(@NonNull LinearLayout rootView, @NonNull ImageView brandNewIv,
      @NonNull TextView brandNewTv, @NonNull RelativeLayout layout1, @NonNull LinearLayout layout2,
      @NonNull RelativeLayout layout3, @NonNull RelativeLayout layout4,
      @NonNull TextView negativeTv, @NonNull ImageView oneTapIv, @NonNull TextView oneTapTv,
      @NonNull TextView positiveTv, @NonNull LinearLayout rootLayout, @NonNull ImageView scan8Iv,
      @NonNull TextView seamlessSharingTv, @NonNull ImageView speedierScansIv,
      @NonNull TextView speedierScansTv) {
    this.rootView = rootView;
    this.brandNewIv = brandNewIv;
    this.brandNewTv = brandNewTv;
    this.layout1 = layout1;
    this.layout2 = layout2;
    this.layout3 = layout3;
    this.layout4 = layout4;
    this.negativeTv = negativeTv;
    this.oneTapIv = oneTapIv;
    this.oneTapTv = oneTapTv;
    this.positiveTv = positiveTv;
    this.rootLayout = rootLayout;
    this.scan8Iv = scan8Iv;
    this.seamlessSharingTv = seamlessSharingTv;
    this.speedierScansIv = speedierScansIv;
    this.speedierScansTv = speedierScansTv;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogRenewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogRenewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_renew, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogRenewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.brand_new_iv;
      ImageView brandNewIv = ViewBindings.findChildViewById(rootView, id);
      if (brandNewIv == null) {
        break missingId;
      }

      id = R.id.brand_new_tv;
      TextView brandNewTv = ViewBindings.findChildViewById(rootView, id);
      if (brandNewTv == null) {
        break missingId;
      }

      id = R.id.layout1;
      RelativeLayout layout1 = ViewBindings.findChildViewById(rootView, id);
      if (layout1 == null) {
        break missingId;
      }

      id = R.id.layout2;
      LinearLayout layout2 = ViewBindings.findChildViewById(rootView, id);
      if (layout2 == null) {
        break missingId;
      }

      id = R.id.layout3;
      RelativeLayout layout3 = ViewBindings.findChildViewById(rootView, id);
      if (layout3 == null) {
        break missingId;
      }

      id = R.id.layout4;
      RelativeLayout layout4 = ViewBindings.findChildViewById(rootView, id);
      if (layout4 == null) {
        break missingId;
      }

      id = R.id.negative_tv;
      TextView negativeTv = ViewBindings.findChildViewById(rootView, id);
      if (negativeTv == null) {
        break missingId;
      }

      id = R.id.one_tap_iv;
      ImageView oneTapIv = ViewBindings.findChildViewById(rootView, id);
      if (oneTapIv == null) {
        break missingId;
      }

      id = R.id.one_tap_tv;
      TextView oneTapTv = ViewBindings.findChildViewById(rootView, id);
      if (oneTapTv == null) {
        break missingId;
      }

      id = R.id.positive_tv;
      TextView positiveTv = ViewBindings.findChildViewById(rootView, id);
      if (positiveTv == null) {
        break missingId;
      }

      LinearLayout rootLayout = (LinearLayout) rootView;

      id = R.id.scan_8_iv;
      ImageView scan8Iv = ViewBindings.findChildViewById(rootView, id);
      if (scan8Iv == null) {
        break missingId;
      }

      id = R.id.seamless_sharing_tv;
      TextView seamlessSharingTv = ViewBindings.findChildViewById(rootView, id);
      if (seamlessSharingTv == null) {
        break missingId;
      }

      id = R.id.speedier_scans_iv;
      ImageView speedierScansIv = ViewBindings.findChildViewById(rootView, id);
      if (speedierScansIv == null) {
        break missingId;
      }

      id = R.id.speedier_scans_tv;
      TextView speedierScansTv = ViewBindings.findChildViewById(rootView, id);
      if (speedierScansTv == null) {
        break missingId;
      }

      return new DialogRenewBinding((LinearLayout) rootView, brandNewIv, brandNewTv, layout1,
          layout2, layout3, layout4, negativeTv, oneTapIv, oneTapTv, positiveTv, rootLayout,
          scan8Iv, seamlessSharingTv, speedierScansIv, speedierScansTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
